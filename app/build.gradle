plugins {
    alias(libs.plugins.android.application)
}

android {
    namespace 'de.schliweb.makeacopy'
    compileSdk 36

    defaultConfig {
        applicationId "de.schliweb.makeacopy"
        minSdk 29
        targetSdk 36
        versionCode 10002
        versionName "1.0.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // Add a note about OpenCV being built from source
        buildConfigField "String", "OPENCV_VERSION", "\"4.12.0\""
    }
    
    dependenciesInfo {
        // Disables the inclusion of dependency metadata in the APK,
        // required for F-Droid to comply with its focus on privacy and transparency.
        // Dependency metadata is unnecessary and could expose additional information.
        includeInApk = false
        // Disables the inclusion of dependency metadata in Android App Bundles as well.
        includeInBundle = false
    }
    
    // Enable reproducible builds for F-Droid
    packaging {
        // Use a fixed timestamp for all files to ensure reproducible builds
        jniLibs.useLegacyPackaging = false
        dex.useLegacyPackaging = false
    }

    //
    //packagingOptions {
    //    exclude '**/*.a'
    //}

    signingConfigs {
        release {
            def myStorePassword = project.findProperty("SIGNING_STORE_PASSWORD") ?: System.getenv("SIGNING_STORE_PASSWORD")
            def myKeyAlias = project.findProperty("SIGNING_KEY_ALIAS") ?: System.getenv("SIGNING_KEY_ALIAS")
            def myKeyPassword = project.findProperty("SIGNING_KEY_PASSWORD") ?: System.getenv("SIGNING_KEY_PASSWORD")
            if (myStorePassword && myKeyAlias && myKeyPassword) {
                storeFile file('keystore.jks')
                storePassword myStorePassword
                keyAlias myKeyAlias
                keyPassword myKeyPassword
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // Only use signing config when available (GitHub Actions)
            // F-Droid will sign with their own keys
            if (project.hasProperty('SIGNING_KEY_ALIAS') && System.getenv('SIGNING_STORE_PASSWORD')) {
                signingConfig signingConfigs.release
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    buildFeatures {
        viewBinding true
        buildConfig true
    }
    
    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets']
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }
}

/*
// Tasks for building OpenCV native libraries from source
task fetchOpenCV(type: Exec) {
    workingDir rootDir
    commandLine 'bash', '-c', './scripts/fetch_opencv.sh'
    description = 'Fetches OpenCV source code'
    group = 'opencv'
}

task buildOpenCVNative(type: Exec) {
    workingDir rootDir
    commandLine 'bash', '-c', './scripts/build_opencv_android.sh'
    description = 'Builds OpenCV native libraries for Android'
    group = 'opencv'
    dependsOn fetchOpenCV
}

task prepareOpenCV(type: Exec) {
    workingDir rootDir
    commandLine 'bash', '-c', './scripts/prepare_opencv.sh'
    description = 'Prepares OpenCV native libraries for the app'
    group = 'opencv'
    dependsOn buildOpenCVNative
}

// Make the preBuild task depend on prepareOpenCV
preBuild.dependsOn prepareOpenCV
*/
dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.constraintlayout
    implementation libs.lifecycle.livedata.ktx
    implementation libs.lifecycle.viewmodel.ktx
    implementation libs.navigation.fragment
    implementation libs.navigation.ui
    
    // Lombok dependency
    compileOnly libs.lombok
    annotationProcessor libs.lombok
    
    // CameraX dependencies
    implementation libs.camerax.core
    implementation libs.camerax.camera2
    implementation libs.camerax.lifecycle
    implementation libs.camerax.view

    // Tesseract OCR dependency
    implementation libs.tesseract
    
    // PdfBox-Android dependency
    implementation libs.pdfbox.android
    
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}